import pytest
import numpy as np
from quandary import Quandary
from utils import assert_results_equal

# Mark all tests in this file as regression tests
pytestmark = pytest.mark.regression

EXPECTED_LENGTH = 3962
EXPECTED_INFIDELITY = 0.8100341641826

EXPECTED_PT = [
    [
        1.89222063059343, 0.117633784279222, 4.64028300872995, -0.0330222256817514, 0.126474004266131,
        2.30707289881048, -1.4716574716800102, -0.64754937225632, 2.0870897477143897, -3.5993747820438102
    ],
    [
        1.52517917625596, -2.0819686425195902, -6.16449162597314, -0.281926172015322, -2.29082646991941,
        -1.35446004376719, -1.73027004354096, -1.6977449891882, -0.957325552016711, -0.66032285194334
    ],
    [
        3.38869388629721, 2.46448942091541, -5.18990161779653, 3.23625763732884, 0.21172074728456902,
        -0.5306089302627199, 0.41489476880584397, -1.3511518437146701, 4.63365073411168, -3.2543080614975404
    ],
]

EXPECTED_QT = [
    [
        4.282471243949811, -1.90435084775161, 2.4105421852599003, 0.943664506103648, -1.48246991300687,
        1.32987551448728, -0.892631152337576, -2.95742646747671, -0.0736760483790147, -0.506870586543159
    ],
    [
        0.58274688212878, -0.5695945929016201, 0.777803006125851, -0.49131203698567594, -1.17510621256011,
        0.189918970015857, 1.79672837073849, 2.5547196576333, 1.96618771070137, 0.334327992279328
    ],
    [
        5.5996176445134695, -0.573714754569928, 3.04724887495592, 1.71942470756566, -0.877046652546983,
        1.3325727744462101, -3.90923703013145, 2.14761212417968, -0.288156432691881, -1.83963133335511
    ],
]

EXPECTED_ENERGY = [
    [
        [
            0.0, 0.0148607579341863, 0.116727716291541, 0.345569094665688, 0.420492333922264,
            0.502613489759601, 0.762594113234293, 0.785381772060781, 0.839275883284673, 0.929013124070048
        ],
        [
            0.0, 0.0146067840666606, 0.11754798689117, 0.346519320469488, 0.4183177982045,
            0.50464640883737, 0.762920218593243, 0.784725458623699, 0.84231160354798, 0.928128544837562
        ],
        [
            0.0, 0.0338745510923139, 0.148104595599986, 0.261474185761009, 0.43195551641555,
            0.542510481056473, 0.662377107041912, 0.773081817363954, 0.845641427818187, 0.836865832278204
        ],
        [
            0.0, 0.0341240967106616, 0.147546776276661, 0.258858419511221, 0.43301547251873,
            0.539199965870178, 0.659097143189277, 0.77199876021302, 0.842398924439871, 0.836306522946996
        ],
        [
            1.0, 0.965748235524499, 0.865577990181392, 0.656382457528953, 0.570472972368594,
            0.492800248880717, 0.25044370810636, 0.216403809620927, 0.161196371800905, 0.0904069492983516
        ],
        [
            1.0, 0.966339411555136, 0.864690415748644, 0.655340165309916, 0.572787651114863,
            0.491244274146324, 0.250766977888323, 0.217115378257751, 0.158045158422749, 0.0914413145926092
        ],
        [
            1.0, 0.985302944171115, 0.869398388325261, 0.736749605523319, 0.57695016774174,
            0.462035000315518, 0.324900968404589, 0.224944666181529, 0.153872876896255, 0.144029544672393
        ],
        [
            1.0, 0.98514321894768, 0.870406130707427, 0.739106751295271, 0.576008087756858,
            0.46495013117886, 0.326899763623054, 0.226348337749972, 0.157257753822829, 0.14380816732843
        ],
    ],
    [
        [
            0.0, 0.0150176314942745, 0.0952237642656534, 0.231161654602016, 0.398633896748728,
            0.574531626678352, 0.606904878512938, 0.691463508739308, 0.71823660153979, 0.689891450405871
        ],
        [
            0.0, 0.0436936513275708, 0.0900374154017835, 0.274075384483282, 0.45593919442545,
            0.519637414444859, 0.675443884172963, 0.714424686347848, 0.751882030138024, 0.682769582193614
        ],
        [
            1.0, 0.945930049751258, 0.872572104725977, 0.772611799325123, 0.59459094265588,
            0.414239449304858, 0.412912804143054, 0.309664967276825, 0.279371139275707, 0.32776261067736
        ],
        [
            1.0, 0.957353693732795, 0.911385175111489, 0.728366698965441, 0.54374940635324,
            0.486344371457795, 0.339151646649223, 0.296283883722812, 0.25715846725817, 0.343462105862045
        ],
        [
            0.0, 0.0363821119988847, 0.0780954049938329, 0.280451133940982, 0.373900998934923,
            0.510075868735727, 0.643999882919365, 0.636071542458841, 0.647625442555183, 0.708855105449523
        ],
        [
            0.0, 0.0618240158469952, 0.0785064319332916, 0.329018008285977, 0.422648586637927,
            0.463065811003479, 0.717857009780474, 0.657369931484991, 0.692081777543554, 0.702806510604441
        ],
        [
            1.0, 0.963098590451382, 0.919650029375563, 0.717591526724565, 0.627551892694819,
            0.483502258280923, 0.342530133643125, 0.353977730515162, 0.342748871896153, 0.264516686473132
        ],
        [
            1.0, 0.976700255412085, 0.954529674217841, 0.666723793644168, 0.582985081535942,
            0.548603200112124, 0.261199760145823, 0.340743749394855, 0.310895669814159, 0.279935948363
        ],
    ],
    [
        [
            0.0, 0.0655588575717349, 0.0953666127615174, 0.228383925020124, 0.348498151711691,
            0.273428303968501, 0.177039919128772, 0.0854203065177286, 0.0111626845277558, 0.0868589774774573
        ],
        [
            1.0, 0.914929104046163, 0.88771048417256, 0.772436424598468, 0.646985777288844,
            0.717671315173012, 0.828004337117799, 0.908248609385593, 0.984278193414155, 0.913728012465152
        ],
        [
            0.0, 0.0705031148232542, 0.13164941611602, 0.19830438969151, 0.311200364229386,
            0.356795065695722, 0.132688623811622, 0.107821000329134, 0.0208808765191582, 0.134883061129968
        ],
        [
            1.0, 0.948810126439896, 0.88510263569838, 0.801095701928753, 0.693256304101845,
            0.652049554109235, 0.862659139829962, 0.898626752171462, 0.983648171135189, 0.864925552983935
        ],
        [
            0.0, 0.0641308638686701, 0.0974321828809197, 0.229940677967645, 0.346693827090613,
            0.275634938859907, 0.179608035901328, 0.0850605815749401, 0.0114112298956469, 0.0880961143337944
        ],
        [
            1.0, 0.91662946844843, 0.885670860009623, 0.770859829069763, 0.649054297157375,
            0.716214484534058, 0.826309111174828, 0.908928466794254, 0.984230209711413, 0.91312708089424
        ],
        [
            0.0, 0.0716084146957608, 0.129827595084711, 0.1957134832151, 0.31075703788224,
            0.35341587787003, 0.128296077572829, 0.106742758530496, 0.0194842289805046, 0.135561378058802
        ],
        [
            1.0, 0.947830050103069, 0.887240213265323, 0.803265568539764, 0.69355424058736,
            0.654790459802924, 0.86539475548002, 0.899151524732232, 0.98490440578269, 0.862819822619949
        ],
    ],
]

EXPECTED_POPULATION = [
    [
        [
            1.0, 0.985139242076125, 0.883272283718809, 0.654430905344746, 0.579507666088186,
            0.497386510250861, 0.237405886776199, 0.214618227949722, 0.160724116725837, 0.0709868759404779
        ],
        [
            1.0, 0.98539321593334, 0.88245201310884, 0.65348067953056, 0.581682201795565,
            0.495353591162707, 0.237079781406884, 0.215274541376461, 0.157688396452205, 0.0718714551627529
        ],
        [
            1.0, 0.96612544890773, 0.851895404400098, 0.738525814239158, 0.568044483584635,
            0.457489518943723, 0.337622892958313, 0.226918182636287, 0.15435857218206, 0.163134167722058
        ],
        [
            1.0, 0.965875903289341, 0.852453223723351, 0.741141580488827, 0.566984527481334,
            0.460800034129898, 0.340902856810848, 0.228001239787137, 0.157601075560305, 0.163693477053312
        ],
        [
            0.0, 0.034251764475504, 0.134422009818618, 0.343617542471092, 0.429527027631466,
            0.507199751119354, 0.749556291893752, 0.783596190379213, 0.838803628199257, 0.90959305070191
        ],
        [
            0.0, 0.0336605884449191, 0.135309584251455, 0.344659834690291, 0.427212348885368,
            0.50875572585392, 0.749233022111954, 0.782884621742538, 0.841954841577546, 0.908558685407704
        ],
        [
            0.0, 0.0146970558288883, 0.13060161167475, 0.263250394476727, 0.423049832258321,
            0.537964999684555, 0.675099031595522, 0.775055333818613, 0.846127123103906, 0.855970455327864
        ],
        [
            0.0, 0.014856781052379, 0.129593869292673, 0.260893248704942, 0.423991912243378,
            0.535049868821387, 0.673100236377226, 0.773651662250322, 0.842742246177471, 0.856191832671892
        ],
    ],
    [
        [
            1.0, 0.984982368516037, 0.904776235744696, 0.768838345408418, 0.601366103261722,
            0.425468373332111, 0.393095121497554, 0.308536491271195, 0.28176339847072, 0.310108549604656
        ],
        [
            1.0, 0.956306348672429, 0.909962584598226, 0.725924615516766, 0.544060805574615,
            0.480362585555218, 0.324556115827164, 0.285575313652313, 0.248117969862161, 0.317230417806702
        ],
        [
            0.0, 0.0540699502487857, 0.127427895274107, 0.227388200675044, 0.405409057344305,
            0.585760550695338, 0.587087195857171, 0.690335032723416, 0.72062886072454, 0.672237389322902
        ],
        [
            0.0, 0.0426463062672075, 0.0886148248885225, 0.271633301034608, 0.456250593646824,
            0.513655628542281, 0.660848353350902, 0.703716116277345, 0.742841532742006, 0.656537894138263
        ],
        [
            1.0, 0.963617888001119, 0.921904595006177, 0.719548866059064, 0.626099001065137,
            0.489924131264345, 0.356000117080747, 0.363928457541299, 0.352374557444978, 0.291144894550738
        ],
        [
            1.0, 0.93817598415306, 0.921493568066807, 0.670981991714231, 0.577351413362303,
            0.536934188996764, 0.282142990219803, 0.342630068515299, 0.307918222456741, 0.297193489395872
        ],
        [
            0.0, 0.0369014095486213, 0.0803499706244474, 0.282408473275481, 0.372448107305242,
            0.51649774171915, 0.657469866356986, 0.64602226948498, 0.657251128104008, 0.735483313527125
        ],
        [
            0.0, 0.0232997445879744, 0.0454703257822588, 0.333276206356045, 0.417014918464293,
            0.451396799888122, 0.738800239854458, 0.659256250605438, 0.689104330186141, 0.720064051637323
        ],
    ],
    [
        [
            1.0, 0.934441142438577, 0.904633387248832, 0.771616074990311, 0.65150184829876,
            0.726571696041962, 0.822960080881721, 0.914579693492775, 0.988837315482754, 0.913141022533069
        ],
        [
            0.0, 0.0850708959538377, 0.11228951582745, 0.22756357540158, 0.353014222711221,
            0.282328684827064, 0.171995662882329, 0.091751390614568, 0.0157218065860296, 0.0862719875351632
        ],
        [
            1.0, 0.929496885176789, 0.868350583884063, 0.801695610308657, 0.688799635770799,
            0.643204934304475, 0.867311376188603, 0.892178999671106, 0.979119123481089, 0.865116938870295
        ],
        [
            0.0, 0.0511898735601057, 0.114897364301632, 0.198904298071296, 0.306743695898219,
            0.347950445890841, 0.137340860170163, 0.101373247828695, 0.0163518288649865, 0.135074447016374
        ],
        [
            1.0, 0.935869136131333, 0.902567817119091, 0.770059322032401, 0.653306172909447,
            0.724365061140165, 0.820391964098783, 0.9149394184252, 0.988588770104514, 0.911903885666467
        ],
        [
            0.0, 0.0833705315516252, 0.114329139990476, 0.229140170930445, 0.350945702842855,
            0.283785515466185, 0.173690888825448, 0.0910715332060352, 0.015769790288882, 0.0868729191060732
        ],
        [
            1.0, 0.928391585304243, 0.870172404915299, 0.804286516784946, 0.689242962117821,
            0.646584122130044, 0.871703922427283, 0.893257241469646, 0.980515771019656, 0.864438621941455
        ],
        [
            0.0, 0.0521699498969902, 0.112759786734776, 0.196734431460449, 0.306445759412875,
            0.345209540197323, 0.13460524452026, 0.100848475268061, 0.0150955942176098, 0.137180177380373
        ],
    ],
]

# Compare output to expected result for 10 points
NUM_SAMPLES = 10
SAMPLE_INDICES = [int(i * (EXPECTED_LENGTH - 1) / (NUM_SAMPLES - 1)) for i in range(NUM_SAMPLES)]


def get_QFT_gate(dim):
    """Generate QFT gate."""
    gate_Hd = np.zeros((dim, dim), dtype=complex)
    om_d = np.exp(1j*2*np.pi/dim)

    for j in range(dim):
        for k in range(dim):
            gate_Hd[j, k] = om_d**(j*k) / np.sqrt(dim)

    return gate_Hd


def test_example_qft(mpi_exec):
    """Test 3-qubit QFT gate optimization using Python interface."""

    # Parameters for 3-qubit case
    nqubits = 3
    freq01_all = [5.18, 5.12, 5.06, 5.0, 4.94]
    Jkl_coupling = 5e-3

    # Set up frequency vector
    freq01 = []
    Ne = []
    Ng = []
    for i in range(nqubits):
        freq01.append(freq01_all[len(freq01_all)-i-1])
        Ne.append(2)
        Ng.append(0)

    # Set up qubit CHAIN coupling
    Jkl = []
    for i in range(len(Ne)):
        for j in range(i+1, len(Ne)):
            if j == i+1:
                val = Jkl_coupling
            else:
                val = 0.0
            Jkl.append(val)

    T = 100
    favg = sum(freq01)/len(freq01)
    rotfreq = favg*np.ones(len(freq01))
    unitary = get_QFT_gate(np.prod(Ne))

    Pmin = 150*2
    spline_knot_spacing = 3.0
    maxctrl_MHz = 25.0
    cw_amp_thres = 5e-2
    cw_prox_thres = 1e-3
    gamma_energy = 1e-4
    gamma_tik0 = 1e-3
    gamma_dpdm = 0.0

    n_osc = 3
    n_levels = 8

    quandary = Quandary(
        Ne=Ne,
        Ng=Ng,
        freq01=freq01,
        Jkl=Jkl,
        rotfreq=rotfreq,
        T=T,
        Pmin=Pmin,
        spline_knot_spacing=spline_knot_spacing,
        targetgate=unitary,
        verbose=False,
        rand_seed=1234,
        maxctrl_MHz=maxctrl_MHz,
        cw_amp_thres=cw_amp_thres,
        cw_prox_thres=cw_prox_thres,
        gamma_energy=gamma_energy,
        gamma_tik0=gamma_tik0,
        gamma_dpdm=gamma_dpdm,
        maxiter=10,
    )

    t, pt, qt, infidelity, energy, population = quandary.optimize(
        mpi_exec=mpi_exec,
        maxcores=4
    )

    assert_results_equal(
        t=t,
        pt=pt,
        qt=qt,
        infidelity=infidelity,
        energy=energy,
        population=population,
        T=T,
        n_osc=n_osc,
        n_levels=n_levels,
        expected_length=EXPECTED_LENGTH,
        expected_infidelity=EXPECTED_INFIDELITY,
        expected_pt=EXPECTED_PT,
        expected_qt=EXPECTED_QT,
        expected_energy=EXPECTED_ENERGY,
        expected_population=EXPECTED_POPULATION,
        sample_indices=SAMPLE_INDICES
    )
